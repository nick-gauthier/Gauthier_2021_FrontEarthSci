scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y), na.rm=TRUE) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
swsn.layout$Macro %>% unique %>% length
color.count <- swsn.layout$Macro %>% unique %>% length
color.count <-
getPalette = colorRampPalette(brewer.pal(9, "Set1"))(swsn.layout$Macro %>% unique %>% length)
getPalette = colorRampPalette(brewer.pal(9, "Set1"))(swsn.layout$Macro %>% unique %>% length)
library(RColorBrewer)
getPalette = colorRampPalette(brewer.pal(9, "Set1"))(swsn.layout$Macro %>% unique %>% length)
getPalette = colorRampPalette(brewer.pal(9, "Set1")(swsn.layout$Macro %>% unique %>% length))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))(swsn.layout$Macro %>% unique %>% length))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))((swsn.layout$Macro %>% unique %>% length))
macro.color.ramp <-
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
scale_fill_brewer(getPalette) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
#scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
macro.color.ramp <-
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
scale_fill_brewer(pal = getPalette) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
#scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
macro.color.ramp <-
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
scale_fill_manual(values = getPalette) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
#scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
getPalette
macro.color.ramp <-
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
scale_fill_manual(values = getPalette) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
#scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
ggraph(swsn.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_bin2d(aes(x = x, y = y, fill = Macro), na.rm=TRUE) +
scale_fill_manual(values = getPalette) +
#geom_edge_link(aes(alpha = weight), color = grey) +
#geom_node_point(aes(color = Macro)) +
#scale_color_brewer() +
#scale_edge_color_viridis() +
#scale_edge_alpha(range = c(0,.25)) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
coord_quickmap() +
theme_void() +
theme(legend.position="none")
ad1200
library(gdistance)
elev.agg <- raster('~/Data/NED/swsn_NED_1.tif') %>% aggregate(fact = 10)
levelplot(elev.agg)
plot(elev.agg)
altDiff <- function(x){x[2] - x[1]}
hd <- transition(elev.agg, altDiff, 8, symm=FALSE)
rm(eof.dat, eofdat)
slope <- geoCorrection(hd, type = 'c')
slope <- geoCorrection(hd, type = 'c')
adj <- adjacent(elev.agg, cells=1:ncell(elev.agg), pairs=TRUE, directions=8)
speed <- slope
speed[adj] <- 6 * exp(-3.5 * abs(slope[adj] + 0.05))
Conductance <- geoCorrection(speed, type = 'c')
rm(slope, hd, adj, speed)
el <- get.edgelist(ad1200)
rm(slope, hd, adj, speed, elev.agg)
V(ad1200)$lon
V(ad1200)$x
V(ad1200)
ad1200
ad1200.pts
swsn.pts
library(rgdal)
library(igraph)
library(ggraph)
library(maps)
library(maptools)
library(raster)
lcp <- costDistance(Conductance, swsn.pts)
library(gdistance)
lcp <- costDistance(Conductance, swsn.pts)
library(tidyverse)
library(rgdal)
library(igraph)
library(ggraph)
library(maps)
library(maptools)
library(raster)
library(gdistance)
lcp <- costDistance(Conductance, swsn.pts)
lcp <- costDistance(Conductance, matrix(swsn.pts))
matrix(swsn.pts)
swsn.pts
lcp <- costDistance(Conductance, as.matrix(swsn.pts))
lcp
lcp1 <- graph_from_adjacency_matrix(lcp, mode = 'directed', weighted = T, diag = F)
lcp1
ad1200
lcp1
lcp <- lcp1
V(lco)
V(lcp)
V(lcp)$name
V(lcp)$names
lcp
ad1200
V(lcp)$name <- V(ad1200)$name
lcp
V(ad1200)$name
ad1200
V(ad1200)
ad1200 %>% delete_vertices(degree(.) == 0)
delete_vertices(ad1200, degree(ad1200) == 0)
V(delete_vertices(ad1200, degree(ad1200) == 0))
V(delete_vertices(ad1200, degree(ad1200) == 0))$id
V(delete_vertices(ad1200, degree(ad1200) == 0))
lcp %>%
induced_subgraph(V(delete_vertices(ad1200, degree(ad1200) == 0)))
V(delete_vertices(ad1200, degree(ad1200) == 0))$ID
E(ad1200)
E(lcp)$weight
E(ad1200)
E(ad1200) == E(lcp)
E(ad1200)[E(ad1200)$weight > 0]
E(ad1200)[E(ad1200)$weight == 0]
delete_edges(lcp, E(ad1200)[E(ad1200)$weight == 0])
E(ad1200)[E(ad1200)$weight == 0]
E(lcp) %in% E(ad1200)
E(lcp) %in% E(ad1200) %>% sum
E(ad1200)
E(lcp)
E(ad1200) %in% E(lcp) %>% sum
match(E(ad1200, E(lcp)))
match(E(ad1200), E(lcp)))
match(E(ad1200), E(lcp))
match(E(lcp), E(ad1200))
E(lcp)
E(ad1200)
E(lcp)[match(E(lcp), E(ad1200))]
E(ad1200)[match(E(lcp), E(ad1200))]
E(lcp)[match(E(ad1200), E(lcp))]
ad1200
match(E(ad1200), E(lcp
match(E(ad1200), E(lcp))
match(E(ad1200), E(lcp))
E(ad1200)
lcp %>%
induced_subgraph(V(delete_vertices(ad1200, degree(ad1200) == 0)))
lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0))))
E(ad1200)
E(lcp)$weights
E(lcp)$weight
E(lcp)$weight <- E(lcp)$weight/3600
lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0))))
E(lcp)$weight
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0))))
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 8]) %>%
create_layout('manual', node.positions = swsn.pts)
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(.,E(.)[E(.)$weight > 8]) %>%
create_layout('manual', node.positions = swsn.pts)
lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0))))
test <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0))))
test
E(test)
E(test)$weight
E(test)$weight > 8
E(test)[E(test)$weight > 8]
lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 8])
V(test)
swsn.attr
V(test) %in% swsn.attr$SWSN_Site
match(V(test), swsn.attr$SWSN_Site)
match(V(test)$name, swsn.attr$SWSN_Site)
swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site)]
swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),]
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 8]) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_edge_link() +
geom_node_point +
coord_quickmap() +
theme_void()
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_edge_link() +
geom_node_point() +
coord_quickmap() +
theme_void()
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_edge_link(alpha = .2) +
geom_node_point() +
coord_quickmap() +
theme_void()
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_edge_attr(degree, degree(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_edge_attr(in.deg, degree(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_edge_attr(., in.deg, degree(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_edge_attr('degree', degree(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_edge_attr('degree', value = degree(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5])
degree(lcp)
degree(lcp, mode = 'in')
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('degree', value = degree(., mode = 'in')) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('degree', value = degree(., mode = 'in')) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
geom_edge_link(alpha = .1) +
geom_node_point(aes(size = degree), color = 'red') +
scale_size_area() +
coord_quickmap() +
theme_void()
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('eigen', value = eigen_centrality(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
geom_edge_link(alpha = .1) +
geom_node_point(aes(size = eigen), color = 'red') +
scale_size_area() +
coord_quickmap() +
theme_void()
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('eigen', value = eigen_centrality(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('eigen_C', value = eigen_centrality(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('eigen_c', value = eigen_centrality(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
geom_edge_link(alpha = .1) +
geom_node_point(aes(size = eigen_c), color = 'red') +
scale_size_area() +
coord_quickmap() +
theme_void()
swsn.lcp.layout <- lcp %>%
induced_subgraph(as_ids(V(delete_vertices(ad1200, degree(ad1200) == 0)))) %>%
delete_edges(E(.)[E(.)$weight > 5]) %>%
set_vertex_attr('eigen.c', value = eigen_centrality(.)) %>%
create_layout('manual', node.positions = swsn.pts[match(V(test)$name, swsn.attr$SWSN_Site),])
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
geom_edge_link(alpha = .1) +
geom_node_point(aes(size = eigen.c), color = 'red') +
scale_size_area() +
coord_quickmap() +
theme_void()
ggraph(swsn.lcp.layout) +
geom_polygon(aes(x = long, y = lat, group = region), data = states, color = 'black', fill = NA) +
geom_label(x = -106, y = 35, label = 'AD 1200') +
geom_edge_link(alpha = .1) +
geom_node_point(color = 'red') +
scale_size_area() +
coord_quickmap() +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
swsn.attr <- read_csv('Data/attributes_orig.csv') %>%
select(-1) # drop ID column
swsn.pts <-  swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates %>%
data.frame
lcp
dist.mat <- costDistance(Conductance, as.matrix(swsn.pts)) %>%
./3600 %>%
setNames(swsn.attr$SWSN_Site)
write_csv(dist.mat. 'Data/cost_matrix.csv')
write_csv(dist.mat, 'Data/cost_matrix.csv')
test <- matrix(c(1,1,2,3), nrow = 2)
test
test %>% setNames(c('bpp','snnt'))
test %>% colnames(c('bpp','snnt'))
length(swsn.pts)
1:nrow(swsn.pts)
1:nrow(swsn.pts)
nrow(swsn.pts)
swsn.pts[1,] %>% as.matrix
swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates
swsn.pts <-  swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates %>% type#%>%
swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates %>% type
swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates %>% class
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts, output = 'SpatialLines')
Conductance.c <- Conductance
rm(Conductance)
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts, output = 'SpatialLines')
swsn.pts <- swsn.attr %>%
select(x = EASTING, y = NORTHING) %>%
SpatialPoints(proj4string=CRS("+proj=utm +zone=12 +datum=WGS84")) %>%
spTransform(CRS("+proj=longlat +datum=WGS84")) %>%
coordinates
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts, output = 'SpatialLines')
extent(swsn.pts)
raster('Data/swsn_NED_1.tif') %>% crop(extent(swsn.pts)) %>% plot
extent(swsn.pts) %>% buffer(width = 10000)
elev <- raster('Data/swsn_NED_1.tif') %>%
crop(extent(swsn.pts)) %>%
aggregate(fact = 10)
elev
altDiff <- function(x){x[2] - x[1]}
hd <- transition(elev, altDiff, 8, symm=FALSE)
adj <- adjacent(elev, cells=1:ncell(elev), pairs=TRUE, directions=8)
slope.c <- geoCorrection(hd, type = 'c')
speed.c <- slope.c
speed.c[adj] <- 6 * exp(-3.5 * abs(slope.c[adj] + 0.05))
Conductance.c <- geoCorrection(speed.c, type = 'c')
rm(slope.c, speed.c)
slope.r <- geoCorrection(hd, type = 'r')
speed.r <- slope.r
speed.r[adj] <- 6 * exp(-3.5 * abs(slope.r[adj] + 0.05))
Conductance.r <- geoCorrection(speed.r, type = 'r')
rm(slope.r, speed.r, hd, adj)
cost_matrix <- costDistance(Conductance.c, swsn.pts)/3600
cost_matrix <- costDistance(Conductance.c, swsn.pts)/3600
colnames(cost_matrix) <- swsn.attr$SWSN_Site
write_csv(cost_matrix, 'Data/cost_matrix.csv')
cost_matrix
swsn.attr
swsn.attr$SWSN_Site
colnames(cost_matrix) <- swsn.attr$SWSN_Site
write_csv(cost_matrix, 'Data/cost_matrix.csv')
write_csv(as.data.frame(cost_matrix), 'Data/cost_matrix.csv')
commute_matrix <- costDistance(Conductance.r, swsn.pts)
crop(extent(swsn.pts))
extent(swsn.pts)
elev <- raster('Data/swsn_NED_1.tif') %>%
crop(extent(c(-112.5, -108, 31, 37.5))) %>%
aggregate(fact = 10)
plot(elev)
plot(swsn.pts, add = T)
plot(elev)
plot(swsn.pts, add = T)
plot(elev)
extent(swsn.pts)
elev <- raster('Data/swsn_NED_1.tif') %>%
crop(extent(c(-113, -106, 31, 37.5))) %>%
aggregate(fact = 10)
altDiff <- function(x){x[2] - x[1]}
hd <- transition(elev, altDiff, 8, symm=FALSE)
hd <- transition(elev, altDiff, 8, symm=FALSE)
adj <- adjacent(elev, cells=1:ncell(elev), pairs=TRUE, directions=8)
slope.c <- geoCorrection(hd, type = 'c')
speed.c <- slope.c
speed.c[adj] <- 6 * exp(-3.5 * abs(slope.c[adj] + 0.05))
Conductance.c <- geoCorrection(speed.c, type = 'c')
rm(slope.c, speed.c)
slope.r <- geoCorrection(hd, type = 'r')
speed.r <- slope.r
speed.r[adj] <- 6 * exp(-3.5 * abs(slope.r[adj] + 0.05))
Conductance.r <- geoCorrection(speed.r, type = 'r')
rm(slope.r, speed.r, hd, adj)
cost_matrix <- costDistance(Conductance.c, swsn.pts)/3600
colnames(cost_matrix) <- swsn.attr$SWSN_Site
write_csv(as.data.frame(cost_matrix), 'Data/cost_matrix.csv')
commute_matrix <- costDistance(Conductance.r, swsn.pts)
colnames(commute_matrix) <- swsn.attr$SWSN_Site
write_csv(as.data.frame(commute_matrix), 'Data/commute_matrix.csv')
cost_matrix
c(cost_matrix)
plot(c(cost_matrix), c(commute_matrix)
plot(c(cost_matrix), c(commute_matrix))
plot(c(cost_matrix), c(commute_matrix))
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts, output = 'SpatialLines')
library(sp)
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts, output = 'SpatialLines')
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts[-1,], output = 'SpatialLines')
plot(test1)
test2 <- shortestPath(Conductance.c, swsn.pts[100,], swsn.pts[-100,], output = 'SpatialLines')
test2 <- shortestPath(Conductance.c, swsn.pts[100,], swsn.pts[-100,], output = 'SpatialLines')
test1 <- shortestPath(Conductance.c, swsn.pts[1,], swsn.pts[-1,], output = 'SpatialLines')
spd1 <- rSPDistance(Conductance.r, swsn.pts, 10)
spd1 <- rSPDistance(Conductance.r, swsn.pts, theta = 10)
spd1 <- rSPDistance(Conductance.r, swsn.pts, swsn.pts, 10)
